import { Injectable } from '@angular/core';
import { deleteByRegex } from './deleteByRegex';
export class HttpCacheStorage {
}
export class DefaultHttpCacheStorage {
    constructor() {
        this.cache = new Map();
    }
    has(key) {
        return this.cache.has(key);
    }
    get(key) {
        return this.cache.get(key);
    }
    set(key, response) {
        this.cache.set(key, response);
    }
    delete(key) {
        if (!key) {
            this.cache.clear();
            return;
        }
        if (typeof key === 'string') {
            this.cache.delete(key);
            return;
        }
        deleteByRegex(key, this.cache);
    }
}
DefaultHttpCacheStorage.decorators = [
    { type: Injectable }
];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaHR0cENhY2hlU3RvcmFnZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL25nbmVhdC9jYXNoZXcvc3JjL2xpYi9odHRwQ2FjaGVTdG9yYWdlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUNBLE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDM0MsT0FBTyxFQUFFLGFBQWEsRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBRWhELE1BQU0sT0FBZ0IsZ0JBQWdCO0NBS3JDO0FBR0QsTUFBTSxPQUFPLHVCQUF1QjtJQURwQztRQUVVLFVBQUssR0FBRyxJQUFJLEdBQUcsRUFBNkIsQ0FBQztJQTJCdkQsQ0FBQztJQXpCQyxHQUFHLENBQUMsR0FBVztRQUNiLE9BQU8sSUFBSSxDQUFDLEtBQUssQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUM7SUFDN0IsQ0FBQztJQUVELEdBQUcsQ0FBQyxHQUFXO1FBQ2IsT0FBTyxJQUFJLENBQUMsS0FBSyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQztJQUM3QixDQUFDO0lBRUQsR0FBRyxDQUFDLEdBQVcsRUFBRSxRQUEyQjtRQUMxQyxJQUFJLENBQUMsS0FBSyxDQUFDLEdBQUcsQ0FBQyxHQUFHLEVBQUUsUUFBUSxDQUFDLENBQUM7SUFDaEMsQ0FBQztJQUVELE1BQU0sQ0FBQyxHQUFxQjtRQUMxQixJQUFJLENBQUMsR0FBRyxFQUFFO1lBQ1IsSUFBSSxDQUFDLEtBQUssQ0FBQyxLQUFLLEVBQUUsQ0FBQztZQUNuQixPQUFPO1NBQ1I7UUFFRCxJQUFJLE9BQU8sR0FBRyxLQUFLLFFBQVEsRUFBRTtZQUMzQixJQUFJLENBQUMsS0FBSyxDQUFDLE1BQU0sQ0FBQyxHQUFhLENBQUMsQ0FBQztZQUNqQyxPQUFPO1NBQ1I7UUFFRCxhQUFhLENBQUMsR0FBYSxFQUFFLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQztJQUMzQyxDQUFDOzs7WUE1QkYsVUFBVSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEh0dHBSZXNwb25zZSB9IGZyb20gJ0Bhbmd1bGFyL2NvbW1vbi9odHRwJztcbmltcG9ydCB7IEluamVjdGFibGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IGRlbGV0ZUJ5UmVnZXggfSBmcm9tICcuL2RlbGV0ZUJ5UmVnZXgnO1xuXG5leHBvcnQgYWJzdHJhY3QgY2xhc3MgSHR0cENhY2hlU3RvcmFnZSB7XG4gIGFic3RyYWN0IGhhcyhrZXk6IHN0cmluZyk6IGJvb2xlYW47XG4gIGFic3RyYWN0IGdldChrZXk6IHN0cmluZyk6IEh0dHBSZXNwb25zZTxhbnk+O1xuICBhYnN0cmFjdCBzZXQoa2V5OiBzdHJpbmcsIHJlc3BvbnNlOiBIdHRwUmVzcG9uc2U8YW55Pik6IHZvaWQ7XG4gIGFic3RyYWN0IGRlbGV0ZShrZXk/OiBzdHJpbmcgfCBSZWdFeHApOiB2b2lkO1xufVxuXG5ASW5qZWN0YWJsZSgpXG5leHBvcnQgY2xhc3MgRGVmYXVsdEh0dHBDYWNoZVN0b3JhZ2UgaW1wbGVtZW50cyBIdHRwQ2FjaGVTdG9yYWdlIHtcbiAgcHJpdmF0ZSBjYWNoZSA9IG5ldyBNYXA8c3RyaW5nLCBIdHRwUmVzcG9uc2U8YW55Pj4oKTtcblxuICBoYXMoa2V5OiBzdHJpbmcpOiBib29sZWFuIHtcbiAgICByZXR1cm4gdGhpcy5jYWNoZS5oYXMoa2V5KTtcbiAgfVxuXG4gIGdldChrZXk6IHN0cmluZykge1xuICAgIHJldHVybiB0aGlzLmNhY2hlLmdldChrZXkpO1xuICB9XG5cbiAgc2V0KGtleTogc3RyaW5nLCByZXNwb25zZTogSHR0cFJlc3BvbnNlPGFueT4pOiB2b2lkIHtcbiAgICB0aGlzLmNhY2hlLnNldChrZXksIHJlc3BvbnNlKTtcbiAgfVxuXG4gIGRlbGV0ZShrZXk/OiBzdHJpbmcgfCBSZWdFeHApOiB2b2lkIHtcbiAgICBpZiAoIWtleSkge1xuICAgICAgdGhpcy5jYWNoZS5jbGVhcigpO1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIGlmICh0eXBlb2Yga2V5ID09PSAnc3RyaW5nJykge1xuICAgICAgdGhpcy5jYWNoZS5kZWxldGUoa2V5IGFzIHN0cmluZyk7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgZGVsZXRlQnlSZWdleChrZXkgYXMgUmVnRXhwLCB0aGlzLmNhY2hlKTtcbiAgfVxufVxuIl19